/******************************************************************************
 *
 * Module: Control ECU
 *
 * File Name: C_ECU.C
 *
 * Description: Source file for Control ECU Module.
 *
 * Author: Amr Ramadan
 ******************************************************************************/
#include "C_ECU.h"

uint8 compare_buffers;
uint8 eeprom_write;
uint8 eeprom_read;
uint8 counter = LOW;
uint8 buffer_1[CTRL_ECU_BUFFER_SIZE];
uint8 buffer_2[CTRL_ECU_BUFFER_SIZE];
uint8 buffer_3[CTRL_ECU_BUFFER_SIZE];
void Receive_Passcode(void);
void Read_passcode(void);
void Check_Passcode(void);
int main() {
	UART_init();
	EEPROM_init();
	SET_BIT(DDRD, PD5);

	while (HIGH) {

		Receive_Passcode();
		Read_passcode();
		Check_Passcode();
	}
}
	void Receive_Passcode(void) {
		while (UART_receiveByte() != MC1_READY) {
		}
		UART_receiveString(buffer_1);

		while (counter < CTRL_ECU_PASSCODE_SIZE) {
			eeprom_write = buffer_1[counter];
			EEPROM_writeByte(EEPROM_LOCATION_ADDRESS + counter, eeprom_write);
			_delay_ms(50);
			counter = counter + HIGH;
		}
	}

	void Read_passcode(void) {
		counter = LOW;
		while (counter < CTRL_ECU_PASSCODE_SIZE) {
			EEPROM_readByte(EEPROM_LOCATION_ADDRESS + counter, &eeprom_read);
			buffer_2[counter] = eeprom_read;
			counter = counter + HIGH;
		}
	}

	void Check_Passcode(void) {
		while (UART_receiveByte() != MC1_READY) {
		}
		UART_receiveString(buffer_3);

		compare_buffers = strcmp(buffer_2, buffer_3);
		_delay_ms(100);
		if (compare_buffers == LOW) {
			UART_sendByte(LOW);
			timer1_PWM_init(LOCKER_OPEN_ANGLE);
			_delay_ms(1500);
			timer1_PWM_init(LOCKER_CLOSE_ANGLE);
		} else {

		}

	}

